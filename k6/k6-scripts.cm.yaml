apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-scripts
  namespace: perf
data:
  steady.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';
    const TARGET = __ENV.TARGET || 'http://backend.perf.svc.cluster.local:8000';
    export const options = {
      scenarios: {
        steady: {
          executor: 'constant-arrival-rate',
          rate: Number(__ENV.RATE || 5),        // requests per second
          timeUnit: '1s',
          duration: __ENV.DURATION || '5m',
          preAllocatedVUs: Number(__ENV.VUS || 10),
          maxVUs: Number(__ENV.MAX_VUS || 100),
        },
      },
    };
    const paths = [
      { p: '/', w: 0.7 },
      { p: '/openapi.json', w: 0.3 },
    ];
    function pick() {
      const r = Math.random();
      let acc = 0;
      for (const {p,w} of paths) { acc += w; if (r <= acc) return p; }
      return paths[0].p;
    }
    export default function () {
      const res = http.get(`${TARGET}${pick()}`);
      check(res, { '200': r => r.status === 200 });
      sleep(0.1);
    }
  ramp.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';
    const TARGET = __ENV.TARGET || 'http://backend.perf.svc.cluster.local:8000';
    const STAGES = JSON.parse(__ENV.RATE_STAGES || '[{"duration":"2m","target":10},{"duration":"2m","target":30},{"duration":"2m","target":50}]');
    export const options = {
      scenarios: {
        ramp: {
          executor: 'ramping-arrival-rate',
          startRate: Number(__ENV.START_RATE || 1),
          timeUnit: '1s',
          preAllocatedVUs: Number(__ENV.VUS || 20),
          maxVUs: Number(__ENV.MAX_VUS || 200),
          stages: STAGES,
        },
      },
    };
    const paths = ['/', '/openapi.json'];
    export default function () {
      const res = http.get(`${TARGET}${paths[Math.random()<0.5?0:1]}`);
      check(res, { '200': r => r.status === 200 });
      sleep(0.05);
    }
  spike.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';
    const TARGET = __ENV.TARGET || 'http://backend.perf.svc.cluster.local:8000';
    export const options = {
      scenarios: {
        warm:  { executor: 'constant-arrival-rate', rate: Number(__ENV.WARM_RATE || 2),  timeUnit: '1s', duration: '1m', preAllocatedVUs: 10, maxVUs: 50 },
        spike: { executor: 'constant-arrival-rate', rate: Number(__ENV.SPIKE_RATE || 80), timeUnit: '1s', duration: '2m', preAllocatedVUs: 100, maxVUs: 500 },
        cool:  { executor: 'constant-arrival-rate', rate: Number(__ENV.COOL_RATE || 2),  timeUnit: '1s', duration: '2m', preAllocatedVUs: 10, maxVUs: 50 },
      },
    };
    export default function () {
      const res = http.get(`${TARGET}/`);
      check(res, { '200': r => r.status === 200 });
      sleep(0.02);
    }
