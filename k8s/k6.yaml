# k6 scripts as a ConfigMap
kubectl -n perf apply -f - <<'YAML'
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-scripts
data:
  steady.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';
    export const options = {
      vus: Number(__ENV.VUS || 5),
      duration: __ENV.DURATION || '5m',
      thresholds: { http_req_failed: ['rate<0.01'] },
    };
    const BASE = __ENV.BASE || 'http://backend.perf.svc.cluster.local:8000';
    export default function () {
      const r = http.get(`${BASE}/openapi.json`, { tags: { name: 'openapi' } });
      check(r, { '200': (x) => x.status === 200 });
      sleep(Number(__ENV.SLEEP || 1));
    }

  burst.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';
    export const options = {
      stages: [
        { duration: __ENV.WARM || '30s', target: Number(__ENV.VU1 || 1) },   // warm-up
        { duration: __ENV.BURST || '60s', target: Number(__ENV.VU2 || 50) }, // burst
        { duration: __ENV.COOL || '60s', target: Number(__ENV.VU3 || 5) },   // cool-down
      ],
      thresholds: { http_req_failed: ['rate<0.01'] },
    };
    const BASE = __ENV.BASE || 'http://backend.perf.svc.cluster.local:8000';
    export default function () {
      const r = http.get(`${BASE}/openapi.json`, { tags: { name: 'openapi' } });
      check(r, { '200': (x) => x.status === 200 });
      sleep(1);
    }
YAML
